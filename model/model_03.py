import random

# Expanded list of food items with BP considerations
food_items = [
    {'food': 'Greek Yogurt with Honey', 'calories': 200, 'protein': 10, 'sugar': 20,
     'bp_recommendation': 'not recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Grilled Chicken Salad', 'calories': 350, 'protein': 30, 'sugar': 10,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Baked Salmon with Quinoa', 'calories': 450, 'protein': 40, 'sugar': 5,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Almonds', 'calories': 150, 'protein': 6, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Oatmeal', 'calories': 150, 'protein': 5, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Avocado Toast', 'calories': 300, 'protein': 8, 'sugar': 2,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Chicken Breast', 'calories': 250, 'protein': 30, 'sugar': 0,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Steamed Broccoli', 'calories': 55, 'protein': 4, 'sugar': 2,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Tuna Salad', 'calories': 200, 'protein': 25, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Quinoa', 'calories': 220, 'protein': 8, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Sweet Potato', 'calories': 100, 'protein': 2, 'sugar': 7,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Brown Rice', 'calories': 215, 'protein': 5, 'sugar': 0,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Scrambled Eggs', 'calories': 180, 'protein': 12, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Mixed Nuts', 'calories': 200, 'protein': 5, 'sugar': 2,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Hummus with Carrots', 'calories': 180, 'protein': 6, 'sugar': 5,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Apple', 'calories': 95, 'protein': 0, 'sugar': 19,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Banana', 'calories': 105, 'protein': 1, 'sugar': 14,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Spinach Salad', 'calories': 100, 'protein': 3, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Cottage Cheese', 'calories': 206, 'protein': 28, 'sugar': 6,
     'bp_recommendation': 'not recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'not recommended', 'asthma_recommendation': 'not recommended'},
    {'food': 'Turkey Breast', 'calories': 135, 'protein': 30, 'sugar': 0,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Chia Seeds Pudding', 'calories': 250, 'protein': 10, 'sugar': 7,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Peanut Butter', 'calories': 190, 'protein': 8, 'sugar': 3,
     'bp_recommendation': 'not recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'not recommended', 'asthma_recommendation': 'not recommended'},
    {'food': 'Whole Wheat Bread', 'calories': 80, 'protein': 4, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Edamame', 'calories': 120, 'protein': 11, 'sugar': 2,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Tofu Stir-Fry', 'calories': 200, 'protein': 15, 'sugar': 6,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Kiwi', 'calories': 42, 'protein': 1, 'sugar': 8,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Pita Bread', 'calories': 170, 'protein': 6, 'sugar': 1,
     'bp_recommendation': 'recommended', 'sugar_recommendation': 'recommended',
     'heart_disease_recommendation': 'recommended', 'asthma_recommendation': 'recommended'},
    {'food': 'Tomato Soup', 'calories': 90, 'protein': 2, 'sugar': 12,
     'bp_recommendation': 'not recommended', 'sugar_recommendation': 'not recommended',
     'heart_disease_recommendation': 'not recommended', 'asthma_recommendation': 'not recommended'}
]

# Function to calculate daily calorie needs
def calculate_calories(weight, height, age, gender, activity_level):
    if gender == 'male':
        bmr = 88.362 + (13.397 * weight) + (4.799 * height * 100) - (5.677 * age)
    else:
        bmr = 447.593 + (9.247 * weight) + (3.098 * height * 100) - (4.330 * age)

    if activity_level == 'sedentary':
        calories_needed = bmr * 1.2
    elif activity_level == 'lightly active':
        calories_needed = bmr * 1.375
    elif activity_level == 'moderately active':
        calories_needed = bmr * 1.55
    elif activity_level == 'very active':
        calories_needed = bmr * 1.725
    else:
        calories_needed = bmr * 1.9

    return calories_needed

# Function to determine weight gain or loss recommendation
def weight_change_recommendation(bmi, calories_needed, has_bp):
    if bmi < 18.5:
        recommendation = 'You should consider gaining weight.'
    elif 18.5 <= bmi < 24.9:
        recommendation = 'Your weight is in a healthy range. Maintain your current weight.'
    else:
        recommendation = 'You should consider losing weight.'

    if recommendation == 'You should consider gaining weight.':
        caloric_intake = calories_needed + 500
    elif recommendation == 'You should consider losing weight.':
        caloric_intake = calories_needed - 500
    else:
        caloric_intake = calories_needed

    # Adjust for BP
    if has_bp:
        recommendation += ' Additionally, follow a low-sodium, low-sugar diet.'

    return recommendation, caloric_intake

# Function to calculate daily protein needs
def calculate_protein(caloric_intake):
    protein_needed = (0.15 * caloric_intake) / 4
    return protein_needed

# Function to filter foods based on health conditions
def filter_foods_by_conditions(food_items, has_bp, has_sugar, has_heart_disease, has_asthma):
    return [
        food for food in food_items
        if not (
            (has_bp and food['bp_recommendation'] == 'not recommended') or
            (has_sugar and food['sugar_recommendation'] == 'not recommended') or
            (has_heart_disease and food['heart_disease_recommendation'] == 'not recommended') or
            (has_asthma and food['asthma_recommendation'] == 'not recommended')
        )
    ]

# Function to generate a meal plan considering health conditions
def generate_meal_plan(caloric_intake, food_items, has_bp, has_sugar, has_heart_disease, has_asthma):
    eligible_foods = filter_foods_by_conditions(food_items, has_bp, has_sugar, has_heart_disease, has_asthma)
    meal_plan = []
    total_calories = 0
    max_attempts = 100
    attempts = 0

    while total_calories < caloric_intake and attempts < max_attempts:
        food = random.choice(eligible_foods)
        if total_calories + food['calories'] <= caloric_intake:
            meal_plan.append(food)
            total_calories += food['calories']
        attempts += 1

    if attempts >= max_attempts:
        print("Warning: Meal plan generation was limited by maximum attempts.")

    return meal_plan

# Function to get list of not recommended foods for BP
def get_not_recommended_foods(food_items):
    return [food for food in food_items if food['bp_recommendation'] == 'not recommended']

# Example User Inputs
bmi = 27
age = 30
gender = 'female'
height = 1.65
weight = 70
activity_level = 'moderately active'
has_bp = True  # Indicates if the user has high blood pressure
has_sugar = True  # Indicates if the user has diabetes
has_heart_disease = False  # Indicates if the user has heart disease
has_asthma = True  # Indicates if the user has asthma

# Calculate daily calorie needs
calories_needed = calculate_calories(weight, height, age, gender, activity_level)

# Weight change recommendation
recommendation, caloric_intake = weight_change_recommendation(bmi, calories_needed, has_bp)

# Calculate protein needs
protein_needed = calculate_protein(caloric_intake)

# Generate meal plan
meal_plan = generate_meal_plan(caloric_intake, food_items, has_bp, has_sugar, has_heart_disease, has_asthma)

# Get list of not recommended foods
not_recommended_foods = get_not_recommended_foods(food_items)

# Output results
print(f"\nDaily Caloric Intake Needed: {caloric_intake:.2f} calories")
print(f"Daily Protein Needed: {protein_needed:.2f} grams")
print(f"Recommendation: {recommendation}")

print("\nGenerated Meal Plan:")
if meal_plan:
    for meal in meal_plan:
        print(f"{meal['food']} - {meal['calories']} calories, {meal['protein']}g protein, {meal['sugar']}g sugar")
else:
    print("No meal plan generated.")

print("\nFoods to Avoid:")
if has_bp:
    print("1. High-sugar foods and drinks")
    print("2. High-sodium foods")
    print("3. Processed snacks and fast food")
    print("\nNot Recommended Foods List:")
    for food in not_recommended_foods:
        print(f"{food['food']} - {food['calories']} calories, {food['protein']}g protein, {food['sugar']}g sugar")
else:
    print("1. High-sugar foods and drinks")
    print("2. Processed snacks and fast food")
    print("3. High-fat and high-calorie desserts")
